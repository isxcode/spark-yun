name: release project

on:
  workflow_dispatch:
    inputs:
      admin_github_token:
        description: '管理员github token'
        required: true
        type: string

env:
  ADMIN_GITHUB_TOKEN: ${{ inputs.admin_github_token }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        node:
          - '18'

    steps:

      - name: Set timezone to Asia/Shanghai
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          date

      - name: Checkout spark-yun
        uses: actions/checkout@v4
        with:
          token: ${{ env.ADMIN_GITHUB_TOKEN }}
          repository: "isxcode/spark-yun"
          ref: 'main'

      - name: Checkout spark-yun-vip
        uses: actions/checkout@v4
        with:
          token: ${{ env.ADMIN_GITHUB_TOKEN }}
          repository: "isxcode/spark-yun-vip"
          path: "spark-yun/"
          ref: 'main'

      - name: Cache gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Install Dependency
        run: ./gradlew install

      - name: Build with Gradle Wrapper
        run: ./gradlew clean package

      - name: Delete zhiqingyun-agent.tar.gz
        run: rm spark-yun-dist/build/distributions/zhiqingyun-agent.tar.gz

      - name: Upload Package to Ali oss
        uses: chf007/aliyun-oss-upload-action@main
        env:
          OSS_ACCESS_KEY_ID: ${{ secrets.ALI_OSS_KEY_ID }}
          OSS_ACCESS_KEY_SECRET: ${{ secrets.ALI_OSS_KEY_SECRET }}
        with:
          region: oss-cn-shanghai
          bucket: isxcode
          source-dir: 'spark-yun-dist/build/distributions'
          dest-dir: 'zhiqingyun'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ispong
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: isxcode/zhiqingyun:latest
          push: true