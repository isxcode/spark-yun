dependencies {
  implementation "com.mysql:mysql-connector-j:${MYSQL_DRIVER_VERSION}"

  implementation "com.microsoft.sqlserver:mssql-jdbc:${SQLSERVER_DRIVER_VERSION}"

  implementation "com.oracle.database.jdbc:ojdbc8:${ORACLE_DRIVER_VERSION}"

  implementation "org.postgresql:postgresql:${POSTGRE_DRIVER_VERSION}"

  implementation "com.dameng:Dm8JdbcDriver18:${DM_DRIVER_VERSION}"

  implementation "com.clickhouse:clickhouse-jdbc:${CLICKHOUSE_DRIVER_VERSION}"

  implementation "com.sap.cloud.db.jdbc:ngdbc:${HANA_DRIVER_VERSION}"

  implementation "mysql:mysql-connector-java:${DORIS_DRIVER_VERSION}"

  implementation "com.oceanbase:oceanbase-client:${OCEAN_BASE_DRIVER_VERSION}"
}

// 构建lib文件夹
tasks.register('build_agent_lib', Copy) {

  dependsOn(":spark-yun-agent:bootJar")
  dependsOn(":spark-yun-backend:spark-yun-api:jar")

  def dependencies = configurations.runtimeClasspath.findAll {
    it.name.contains('fastjson2') ||
      it.name.contains('fastjson') ||
      it.name.contains('spark-yun-api') ||
      it.name.contains('log4j-api') ||
      it.name.contains('mysql-connector-j') ||
      it.name.contains('mssql-jdbc') ||
      it.name.contains('ojdbc8') ||
      it.name.contains('postgresql') ||
      it.name.contains('Dm8JdbcDriver18') ||
      it.name.contains('clickhouse-jdbc') ||
      it.name.contains('ngdbc') ||
      it.name.contains('mysql-connector-java') ||
      it.name.contains('oceanbase-client')
  }
  dependencies.each { dependency ->
    from dependency
    into 'build/zhiqingyun_agent/lib'
  }

  from rootDir.getAbsolutePath() + '/spark-yun-backend/spark-yun-api/build/libs'
  from rootDir.getAbsolutePath() + '/spark-yun-agent/build/libs'
  from rootDir.getAbsolutePath() + '/spark-yun-plugins/spark-query-sql-plugin/build/libs'
  into 'build/zhiqingyun-agent/lib'
}

// 构建plugins文件夹
tasks.register('build_agent_plugins', Copy) {

  dependsOn(':spark-yun-plugins:spark-query-sql-plugin:jar')

  from rootDir.getAbsolutePath() + '/spark-yun-plugins/spark-query-sql-plugin/build/libs'
  into 'build/zhiqingyun-agent/plugins'
}

// 构建至轻云代理
tasks.register('build_agent', Tar) {

  mustRunAfter(":spark-yun-frontend:make")

  dependsOn('build_agent_lib')
  dependsOn('build_agent_plugins')

  compression = Compression.GZIP
  archiveFileName = 'zhiqingyun-agent.tar.gz'

  from(rootDir.getAbsolutePath() + "/spark-yun-dist/spark-min") {
    into 'zhiqingyun-agent/spark-min'
  }
  from('zhiqingyun-agent/bin') {
    into 'zhiqingyun-agent/bin'
  }
  from('zhiqingyun-agent/conf') {
    into 'zhiqingyun-agent/conf'
  }
  from('zhiqingyun-agent/logs') {
    into 'zhiqingyun-agent/logs'
  }
  from('build/zhiqingyun-agent/plugins') {
    into 'zhiqingyun-agent/plugins'
  }
  from('build/zhiqingyun-agent/lib') {
    into 'zhiqingyun-agent/lib'
  }
  from('../README.md') {
    into 'zhiqingyun-agent/'
  }
}

// 构建至轻云
tasks.register('build_zhiqingyun', Tar) {

  mustRunAfter(":spark-yun-backend:make")

  compression = Compression.GZIP
  archiveFileName = 'zhiqingyun.tar.gz'

  from('zhiqingyun/bin') {
    into 'zhiqingyun/bin'
  }
  from(rootDir.getAbsolutePath() + '/spark-yun-backend/spark-yun-main/src/main/resources/application-local.yml') {
    into 'zhiqingyun/conf'
  }
  from('zhiqingyun/logs') {
    into 'zhiqingyun/logs'
  }
  from(rootDir.getAbsolutePath() + '/spark-yun-backend/spark-yun-main/build/libs/zhiqingyun.jar') {
    into 'zhiqingyun/lib'
  }
  from(rootDir.getAbsolutePath() + '/README.md') {
    into 'zhiqingyun/'
  }
}

// 打包
tasks.register('make', GradleBuild) {

  tasks = [":spark-yun-frontend:make", "build_agent", ":spark-yun-backend:make", "build_zhiqingyun"]
}